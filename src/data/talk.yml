- id: peeking-inside-react
  title: 'Peeking inside React: The Background Magic'
  speaker: abhishek
  description: Looking into how react is rendered and what are the processes that they follow, VDom, Reconciliation, Memoization.
  materials:
    - type: slide
      url: https://docs.google.com/presentation/d/1TcUEQYqkggdBamR2iYe6Y82Zfs63mkeoC-fgrDKKFlM/edit?usp=sharing
- id: boost-dx-with-graphql
  title: Boost your developer experience with GraphQL
  speaker: yongshean
  description: Managing data fetching and UI rendering logics when dealing with API calls are the most challenging and often frustrating for most developers. This talk presents the benefits that GraphQL offers for enhancing developer experience.
  materials:
    - type: slide
      url: https://docs.google.com/presentation/d/18Jrz9drlAcPG-XrZ2AOtqB-wnELc0Wj9uJbMrcpWV8M/edit?usp=sharing
- id: gatsby-mdx
  title: Using MDX in Gatsby site
  speaker: matt
  description: Ever wanted to use React together with markdown in your projects? Now you can with gatsby-plugin-mdx. Write markdown for your pages while importing React components in the same file.
  materials:
    - type: repo
      url: https://github.com/matt-writes-code/gatsby-plugin-mdx
    - type: demo
      url: https://gatsby-plugin-mdx.netlify.com/
- id: why-the-hook
  title: 'Why The Hook: Evolution of Stateful Logic Composition in React'
  speaker: malcolm
  description: A brief history of how stateful logic in React evolved from mixin, to HOC/Render Props, and finally to hooks today. You would understand why hooks is a better patterns in React.
  materials:
    - type: repo
      url: https://github.com/malcolm-kee/infinite-scroll-pokemon
    - type: demo
      url: https://pokemon-infinity.netlify.com
- id: css-animations-in-react
  title: Creating CSS Animations in React
  speaker: wendy
  description: CSS animations (when used correctly) can add life to your website and engage users. In this talk we will explore a simple animation built on pure CSS and HTML, and how to make the code cleaner and more extensible using React and Emotion.
  materials:
    - type: slide
      url: https://speakerdeck.com/wendko/creating-css-animations-in-react
- id: deploy-react-native-to-web
  title: Deploying React Native to Web
  speaker: joel
  description: With Expo you can deploy to iOS and Android with ease. Now you can use Expo for web as well ðŸ¤¯
  materials:
    - type: slide
      url: https://docs.google.com/presentation/d/1rMumju5l71WD7_xQ6M0W21MEC2AxvZMCEsr7IT09shg/edit
- id: why-css-in-js
  title: Why We Should Write CSS in JS
  speaker: azizi
  description: In this talk we will walk through on the advantages of writing CSS in JS and why its the right time to end the Global style-sheet for Local style-sheet using CSS-in-JS.
  materials:
    - type: slide
      url: https://speakerdeck.com/aziziyazit/why-we-should-write-css-in-js
- id: intro-to-ts-in-react
  title: Introduction to TypeScript Features in React
  speaker: lewis
  description: Introduction to features of TypeSript that developers can use to benefit their work flow.
  materials:
    - type: slide
      url: https://docs.google.com/presentation/d/1-LKxfMos-slU78xXtqpn9NgN_pDsxgV-bzce02Ri2Yw/mobilepresent
- id: productive-react-codebase
  title: A Productive React Codebase
  speaker: aymen
  description: We will be looking into the next step in React learning and utilising its abstraction power to extract stateful logic and convert a working component into a reusable component that can be implemented in different parts in the application easily and smoothly. We will be using Hooks and HOC to achieve this and to have a much readable and elegant code.
  materials:
    - type: slide
      url: https://public-kyan.ayox.now.sh/
    - type: repo
      url: https://github.com/ayox/react-kl-productive-codebase
- id: template-literals
  title: Hidden Powers of Template Literals
  speaker: pushkin
  description: "People usually think that backticks (` `) are yet another quote for strings. But that's much more to string literal in JavaScript than normal single and double quotes. I'll talk about how string literals can be used a in CSS in JS, Web Component and how `Literal Tag` functions works."
- id: hate-hooks
  title: Why I Hate Hooks
  speaker: sergio
  description: Hook is a bad way to manage state in your application, it's easily abused, difficult to test, often hiding bad architecture decision behind fancy functional programming API, creating unnecessary performance bottleneck in your apps and more.
- id: concurrent-react
  title: React Cocurrent Mode
  speaker: malcolm
  description: An overview of the next major React feature - Concurrent Mode. Understand how concurrent mode could improves user experience by unlocking new UI patterns that was not possible previously.
